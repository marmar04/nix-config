## ELinks 0.15.1 configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## document 
#  Document options.

  ## document.uri_passing 
  #  Rules for passing URIs to external commands. When one rule is defined the
  #  link and tab menu will have a menu item that makes it possible to pass the
  #  the link, frame or tab URI to an external command. If several rules are
  #  defined the link and tab menu will have a submenu of items for each rule.
  #  
  #  The action and submenus are also available by binding keys to the
  #  frame-external-command, the link-external-command, and the
  #  tab-external-command actions.
  #  
  #  Commands run in the background by default: elinks is still active, and they
  #  do not receive standard input. The "foreground" suboption reverses this
  #  behaviour: the command receives standard input and elinks is blocked.

    ## document.uri_passing.openVideos 
    #  A rule for passing URI to an external command.

      ## document.uri_passing.openVideos.command <str>
      set document.uri_passing.openVideos.command = "yt-dlp -o - %c | vlc -"



## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"

## image viewer setup {{{1
set mime.extension.jpg="image/jpeg"
set mime.extension.jpeg="image/jpeg"
set mime.extension.png="image/png"
set mime.extension.gif="image/gif"
set mime.extension.bmp="image/bmp"

set mime.handler.image_viewer.unix.ask = 1
set mime.handler.image_viewer.unix-xwin.ask = 0
 
set mime.handler.image_viewer.unix.block = 1
set mime.handler.image_viewer.unix-xwin.block = 0 

set mime.handler.image_viewer.unix.program = "pim %"
set mime.handler.image_viewer.unix-xwin.program = "pim %"

set mime.type.image.jpg = "image_viewer"
set mime.type.image.jpeg = "image_viewer"
set mime.type.image.png = "image_viewer"
set mime.type.image.gif = "image_viewer"
set mime.type.image.bmp = "image_viewer"
#}}}
## key bindings {{{1

# move bindings like in vim: hjkl.
bind "main" "h" = "scroll-left"
# history manager was on "h" so remap it
bind "main" "z" = "history-manager"
bind "main" "j" = "scroll-down"
bind "main" "k" = "scroll-up"
bind "main" "l" = "scroll-right"
# allow easy moving to next link. Not really like in Vim, but similar.
bind "main" "K" = "move-link-prev"
bind "main" "J" = "move-link-next"
# back
bind "main" "H" = "history-move-back"
# forward
bind "main" "L" = "history-move-forward"

# page up/down
bind "main" "u"     = "move-page-up"
bind "main" "d" = "move-page-down"
