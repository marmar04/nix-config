# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
include catppuccin-mocha

exec cliphist wipe

exec dbus-sway-environment
exec configure-gtk
exec emacs --daemon
exec foot --server

exec_always --no-startup-id nm-applet --indicator &
exec_always --no-startup-id gammastep-indicator -l 2.9:101.6 &
exec_always --no-startup-id blueman-applet &
# give sway a little time to startup before starting kanshi.
# exec sleep 5; systemctl --user start kanshi.service

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1

# Set up cliphist
exec wl-paste --watch cliphist store &
bindsym $mod+Shift+p exec cliphist list | fuzzel -d | cliphist decode | wl-copy
bindsym $mod+Shift+d exec cliphist list | fuzzel -d | cliphist delete

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term footclient
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu wofi --show drun
set $menu fuzzel
bindsym --release Super_L exec pkill fuzzel || fuzzel
### Output configuration
#
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
output "*" bg ./../wallpaper/latissa_otwat.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# screenshots
bindsym $mod+c exec grim -g "$(slurp)" /tmp/$(date +'%H:%M:%S.png')
bindsym Shift+Print exec grim
bindsym Print exec grim -g "$(slurp)" -t png - | wl-copy -t image/png

### Idle configuration
#
# Example configuration:

exec swayidle -w \
        timeout 300 'swaylock --clock -f -i ~/.config/wallpaper/wingItLikeWitches01.png' \
        timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
        before-sleep 'swaylock --clock -f -i ~/.config/wallpaper/portal_toh.jpg'
# DB54B4
bindsym Mod4+l exec swaylock -f -i ~/.config/wallpaper/wingItLikeWitches01.png
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
  input type:touchpad {
      dwt enabled
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
      accel_profile adaptive
      pointer_accel 1
  }

  input type:pointer {
      natural_scroll enabled
      pointer_accel 1
      accel_profile adaptive
  }

  input type:keyboard {
      xkb_numlock enabled
  }

seat seat0 xcursor_theme Adwaita 24

# if corner_radius is set (above 0), avoid using titlebars / borders until https://github.com/WillPower3309/swayfx/issues/15 is fixed
default_border pixel 2

# Borders for focused windows
client.focused $teal $base $text $green $green
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

gaps outer 5
gaps inner 5

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Gestures
#
    # Allow switching between workspaces with left and right swipes
    bindgesture swipe:right workspace prev
    bindgesture swipe:left workspace next
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# For assigning a window to a specific workspace
assign [class="Emacs"] workspace number 3; workspace 3

# Floating windows
for_window [window_role="pop-up"] floating enable
for_window [window_role="Pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="Bubble"] floating enable
for_window [window_role="dialog"] floating enable
for_window [window_role="Dialog"] floating enable
for_window [window_type="dialog"] floating enable
for_window [class="dialog"] floating enable
for_window [class="Dialog"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [window_role="About"] floating enable
for_window [window_type="Dialog"] floating enable

for_window [app_id=".blueman-manager-wrapped"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="kvantummanager"] floating enable
for_window [con_mark="About Mozilla Thunderbird"] floating enable

# xwayland apps
for_window [class="Firefox"] inhibit_idle fullscreen
for_window [class="FreeTube"] inhibit_idle fullscreen

# wayland apps
for_window [app_id="firefox"] inhibit_idle fullscreen

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
# 
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
# 
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

bar swaybar_command waybar

# Binding keys to functions
bindsym XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
# bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
# bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous
bindsym XF86Search exec $menu
bindsym XF86Display exec wdisplays

# For wob
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob
bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/^Volume: //' | sed 's/\.\([0-9]\)/\1/g' | awk '{if ($0 ~ /\[MUTED\]/) print "0"; else print $0}' | sed 's/^\([0-9]*\)\..*/\1/' > $WOBSOCK
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/^Volume: //' | sed 's/\.\([0-9]\)/\1/g' | awk '{if ($0 ~ /\[MUTED\]/) print "0"; else print $0}' | sed 's/^\([0-9]*\)\..*/\1/' > $WOBSOCK
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/^Volume: //' | sed 's/\.\([0-9]\)/\1/g' | awk '{if ($0 ~ /\[MUTED\]/) print "0"; else print $0}' | sed 's/^\([0-9]*\)\..*/\1/' > $WOBSOCK
bindsym XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $WOBSOCK
bindsym XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $WOBSOCK

include @sysconfdir@/sway/config.d/*
