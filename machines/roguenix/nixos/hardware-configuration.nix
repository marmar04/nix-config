# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/b184cc00-fa7b-438e-b769-afc6d1dade38";
    fsType = "btrfs";
    options = ["subvol=root" "compress=zstd:9"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/b184cc00-fa7b-438e-b769-afc6d1dade38";
    fsType = "btrfs";
    options = ["subvol=home" "compress=zstd:9"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/b184cc00-fa7b-438e-b769-afc6d1dade38";
    fsType = "btrfs";
    options = ["subvol=nix" "compress-force=zstd:9" "noatime"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/c9b498c0-87d8-4fb2-b967-87ea89ec11dc";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Set your system kind (for flakes)
  nixpkgs.hostPlatform = "x86_64-linux";
}
